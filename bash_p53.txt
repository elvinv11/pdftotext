El shell Bash

MacProgramadores

Tanto $* como $@ nos devuelven los argumentos recibidos por el script o
función.
Como ejemplo, el script recibe del Listado 4.1 lo vamos a modificar tal
como muestra el Listado 4.7 para que use esta variable para sacar los
argumentos recibidos.
Ejemplo de script que recibe parametros y los imprime
echo "El script $0 recibe $# argumentos:" $*
echo "El script $0 recibe $# argumentos:" $@
Listado 4.7: Ejemplo de uso de $* y $@

Al ejecutarlo obtenemos:
$ recibe hola adios
El script ./recibe recibe 2 argumentos: hola adios
El script ./recibe recibe 2 argumentos: hola adios
Aunque cuando no entrecomillamos $* o $@ no existen diferencias entre usar
uno y otro, cuando los encerramos entre comillas débiles existen dos
diferencias que conviene resaltar:
La primera es que podemos cambiar el símbolo que usa $* para separar los
argumentos indicándolo en la variable de entorno IFS (Internal Field
Separator), mientras que $@ siempre usa como separador un espacio. Por
ejemplo si hacemos el siguiente script:
IFS=','
echo "El script $0 recibe $# argumentos: $*"
echo "El script $0 recibe $# argumentos: $@"
Al ejecutarlo obtenemos:
$ recibe hola adios
El script ./recibe recibe 2 argumentos: hola,adios
El script ./recibe recibe 2 argumentos: hola adios
La segunda diferencia se produce al recoger los argumentos para pasárselos
a una función. Imaginemos que tenemos definida la siguiente función:
function CuentaArgumentos
{
echo "Recibidos $# argumentos"
}

Pág 53

