El shell Bash

MacProgramadores

La opción -l hace que grep devuelva sólo los nombres de fichero donde ha
encontrado la palabra 'bash'.
La sustitución de comandos se realiza dentro de las comillas dobles (o
débiles) con lo que podemos extender las regla que vimos en el apartado 4.1
del Tema 3 para utilizar comillas fuertes siempre que dentro no tengamos una
variable o sustitución de comando que queramos ejecutar.
Ejercicio 4.4
El comando ls no tiene ninguna forma de seleccionar ficheros por una
determinada fecha de modificación. Hacer una función que nos devuelva los
ficheros del directorio actual cuya fecha de modificación sea la dada en un
argumento. Hacer luego un script llamado lsfecha al que le pasemos una
fecha y nos devuelva los ficheros de ese directorios modificados en esa fecha.
La función que lista los ficheros modificados en una fecha podría buscar la
fecha en la salida de ls -lad usando grep, es decir si ejecutamos:
$ ls -lad *
-rw-r--r--rwxr-xr-x
-rw-r--r--rw-r--r--rw-r--r--

|
1
1
1
1
1

grep "3 Aug"
fernando admin 6148
fernando admin
327
fernando admin 75688
fernando admin
0
fernando admin
0

3
3
3
3
3

Aug
Aug
Aug
Aug
Aug

18:44
18:20
18:18
18:19
18:20

.DS_Store
bmptojpg
casa.bmp
casa.jpg
casa.ppm

Sólo obtendremos los ficheros con fecha de modificación "3 Aug". Si ahora
con cut cortamos de la columna 54 al final obtenemos los nombres de los
ficheros con esta fecha de modificación. Esto es lo que hace la función
ListaFecha() del Listado 4.11.
# Script que encuentra los ficheros modificados en una
# determinada fecha con el formato '14 Jun' que usa
# ls -lad para dar las fechas de modificacion
# Funcion que lista ficheros del directorio
# actual modificados en la fecha $1
function ListaFecha
{
ls -lad * | grep "$1" | cut -c54}
ls -lad $(ListaFecha "$1")
Listado 4.11: Script que lista los ficheros modificados en la fecha indicada

Para hacer el script tenemos que volver a ejecutar el comando ls -la, pero
pasándole ahora como argumento los nombres de los ficheros que queremos
Pág 64

