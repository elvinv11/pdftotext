El shell Bash

MacProgramadores

2.3. El comodín llaves
El comodín llaves, a diferencia de los anteriores, no estudia el nombre de los
ficheros existentes en disco para nada, simplemente expande una palabra por
cada una de las cadenas de caracteres que contiene, por ejemplo:
$ echo c{ami,ontamina,}on
camion contaminaon con
Es posible incluso anidarlo y genera el producto cartesiano de combinaciones:
$ echo c{a{min,nt}a,ose}r
caminar cantar coser
En el apartado 2.1 comentamos que un problema que tenía el comodín
corchete es que expandía por un y sólo un carácter, lo cual era problemático
si queríamos referirnos por ejemplo a todos los ficheros de un programa, ya
que *.[coh] nos permite referirnos a los fichero .c, .o y .h, pero no a los
.cpp.
Usando el comodín llave podemos superar esta dificultad: *.{h,c,cpp,o}
espadería en todos los ficheros con estas extensiones, aunque ahora surge un
nuevo problema y es que, debido a que el comodín llave no mira que ficheros
hay en disco, si no existe un fichero con alguna de las extensiones indicadas,
la expansión del * no se produce, y encontraríamos un mensaje de error. Por
ejemplo:
$ ls *.{h,c,cpp,o}
ls: *.c: No such file or directory
ls: *.o: No such file or directory
clave.cpp
clave.h
Se puede usar .. para hacer algo similar a lo que hacen los corchetes
obteniendo todos lo caracteres ASCII entre dos letras. Por ejemplo:
$ echo l{a..e}
la lb lc ld le
Obsérvese que, en el caso de los corchetes, lo que obtendríamos no son un
conjunto de cinco palabras, sino una expansión por un fichero existente:
$ echo cl[a-e]ve.h
clave.h
O la cadena sin expandir si no se encuentra el fichero:
$ echo cl[e-i]ve.h
Pág 12

