El shell Bash

MacProgramadores

2. Variables del shell
Principalmente Bash utiliza variables de tipo cadena de caracteres. Esto le
diferencia de otros lenguajes de programación donde las variables tienen
distintos tipos. Aunque éste es el tipo por defecto de las variables de Bash,
más adelante veremos que las variables en Bash también pueden tener otros
tipos, como por ejemplo enteros con los que realizar operaciones aritméticas.
Por convenio las variables de entorno exportadas (las que pasamos a los
subprocesos) se escriben en mayúsculas, y las que no exportamos en
minúsculas. Esta regla, más que por el modo interactivo, es especialmente
seguida por los scripts y funciones que vamos a empezar a programar ahora.

2.1. Los parámetros posiciónales
Los parámetros posiciónales son los encargados de recibir los argumentos
de un script y los parámetros de una función. Sus nombres son 1, 2, 3, etc.,
con lo que para acceder a ellos utilizaremos, como normalmente, el símbolo $
de la forma $1, $2, $3, etc. Además tenemos el parámetro posicional 0 que
almacena el nombre del script donde se ejecuta.
Por ejemplo imaginemos que creamos el script del Listado 4.1:
#!/bin/bash
# Ejemplo de script que recibe parametros y los imprime
echo "El script $0"
echo "Recibe los argumentos $1 $2 $3 $4"
Listado 4.1: Script que recibe argumentos

Si lo hemos guardado en un fichero llamado recibe con el permiso x
activado podemos ejecutarlo así:
$ recibe hola adios
El script ./recibe
Recibe los argumentos hola adios
Como los argumentos $3 y $4 no los hemos pasado son nulos que dan lugar
a una cadena vacía que no se imprime.
Para definir una función podemos escribirla en un fichero y cargarla en el
shell usando el comando source, o bien definirla directamente en modo
interactivo:

Pág 49

