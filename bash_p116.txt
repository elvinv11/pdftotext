El shell Bash

\r
\t

MacProgramadores

Retorno de carro
Tabulador

Tabla 7.3: Secuencias de escape del comando echo

El carácter de escape \b se puede usar para borrar texto escrito. Por
ejemplo, el Listado 7.4 muestra un script que permite ir escribiendo el
porcentaje realizado de un proceso.
for ((i=0;i<10;i++))
do
echo -n "Procesado $i"
sleep 1
echo -ne "\b\b\b\b\b\b\b\b\b\b\b"
done
Listado 7.4: Script que muestra un proceso usando \b

El bucle se repite de 0 a 9, sin embargo esto se puede complicar si queremos
hacerlo de 0 a 100 ya que estos números tienen distinto número de dígitos.
Sin embargo podemos usar \r que retorna el cursor en el terminal sin
introducir un cambio de línea (como hace \n). El Listado 7.5 muestra como
podría quedar a ahora el script.
for ((i=0;i<10;i++))
do
echo -n "Procesado $i"
sleep 1
echo -ne "\r"
done
Listado 7.5: Script que muestra un proceso usando \r

2.2. El comando interno printf
Aunque el comando echo es suficiente en la mayoría de los casos, en
ocasiones, especialmente a la hora de formatear texto en pantalla, es
necesaria más flexibilidad, y en este caso se utiliza el comando printf.
Este comando, en principio, puede escribir cadenas igual que echo:
$ printf "Hola mundo"
Hola mundo
Aunque a diferencia de echo no imprime el cambio de línea del final, sino
que debemos indicarlo explícitamente. Además, printf por defecto
interpreta las secuencias de escape.
Pág 116

