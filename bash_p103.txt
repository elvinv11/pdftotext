El shell Bash

MacProgramadores

$ IFS=,
$ echo ${C[*]}
Cosa Casa Perro
$ echo ${C[@]}
Cosa Casa Perro
$ echo "${C[@]}"
Cosa Casa Perro
$ echo "${C[*]}"
Cosa,Casa,Perro
Al igual que en los parámetros posiciónales podemos iterar sobre un array
con un bucle for:
for e in ${C[*]}
do
echo $e
done
Donde al ser ${C[*]} una cadena de caracteres hubiéramos también podido
usar ${C[@]} o "${C[@]}" pero si hacemos "${C[*]}" lo que obtenemos
es una cadena con los elementos de ésta separados por el valor de IFS
(coma en este ejemplo), y no por espacio. Sin embargo el bucle hubiera
funcionado si los elementos están separados por el valor de IFS, y de hecho
en ocasiones (p.e. cuando los elementos tienen espacios) conviene utilizar
esta última solución.
Los elementos de un array a los que no se asigna valor tienen una cadena
nula, con lo que el bucle anterior sólo imprimiría los elementos que existan en
el array C.
Podemos consultar la longitud de un array usando la forma ${#array[@]},
donde array es el nombre del array a consultar su longitud. Por ejemplo, en
el ejercicio anterior:
$ echo ${#C[@]}
3
Nos dice que hay tres elementos aunque los índices lleguen hasta el índice 7,
ya que existen posiciones sin asignar en el array, # sólo nos devuelve el
número de posiciones ocupadas.
También debemos tener en cuenta que dentro de los corchetes va una @, y
no un índice, ya que sino nos devuelve la longitud (en caracteres) de ese
elemento. Por ejemplo, si en el índice 5 teníamos la cadena "Casa":
$ echo ${#C[5]}
4
Pág 103

