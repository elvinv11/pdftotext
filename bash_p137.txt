El shell Bash

MacProgramadores

El campo Acción de la Tabla 8.3 indica cual es el comportamiento por defecto
de un proceso ante una señal, y puede tomar uno de estos cuatro valores:
•
•
•
•

Term. Se termina el proceso.
Ign. Se ignora la señal.
Core. Se termina el proceso y se hace un dump del core.
Stop. Se para el proceso.

3.1. Combinaciones de teclas que envían señales
Existen varias combinaciones de teclas que actúan sobre el proceso que se
esté ejecutando en foreground en el terminal.
La combinación de teclas Ctrl+C envía la señal SIGINT al proceso, con lo que
éste debería de terminar. Ctrl+Z envía la señal SIGTSTP al proceso, con lo
que éste se detiene. Ctrl+\ manda la señal SIGQUIT al proceso, y se debe
usar sólo cuando el proceso no responde a SIGINT. Esto se debe a que a
veces los procesos capturan la SIGINT, y en ella hacen desinicializaciones y
cierres de fichero. Si esta operación de cierre tarda en realizarse, o se queda
bloqueada por algún error, el usuario puede enviar la señal SIGQUIT que
normalmente no está capturada por los procesos, y el proceso termina. Esta
terminación brusca puede dejar ficheros sin cerrar, y no se recomienda usarla
más que si el cierre con SIGINT no ha funcionado.
Podemos usar el comando stty para crear nuevas combinaciones de teclas
que envíen señales al proceso el foreground usando stty señal ^letra.
donde señal es el nombre de la señal en minúsculas y sin el prefijo SIG. Por
ejemplo para que Ctrl+Q produzca la señal SIGQUIT podemos usar:
$ stty quit ^Q

3.2. El comando interno kill
Podemos usar el comando interno kill para enviar un comando a cualquier
proceso que hayamos creado, no sólo al que esté ejecutándose en
foreground. Además, si tenemos permiso de administración, podemos enviar
mensajes con kill a procesos de otros usuarios.
kill recibe como argumento el ID de proceso, el número de job (precedido
por %) o el nombre del comando (también precedido por %). En estos dos
últimos casos necesitamos que el proceso sea un job de nuestro terminal.

Pág 137

