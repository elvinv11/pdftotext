El shell Bash

MacProgramadores

echo -n "Indique numero:"
read n
for((i=0;i<=10;i++))
do
echo "${n}x$i=$(($n*$i))"
done
Listado 6.4: Script que imprime la tabla de multiplicar de un número

3.4. Arrays
Bash introdujo los arrays en la versión 2.0. Actualmente Bash sólo soporta
trabajar con arrays unidimensionales.
Para declarar un array podemos usar el comando declare -a de la
siguiente forma:
$ declare -a A
Si ahora preguntamos por la variable A, nos dice que es un array vacío:
$ declare -p A
declare -a A='()'
Realmente no hace falta declarar un array con declare -a, podemos
crearlo asignándole directamente valores así:
$ B=(Jamon 4 Melon)
$ declare -p B
declare -a B='([0]="Jamon" [1]="4" [2]="Melon")'
Los elementos en los arrays Bash empiezan a contar en 0, aunque podemos
cambiar los índices de los elementos indicándolos explicitamente:
$ C=([5]=Melon [0]=Jamon [3]=400)
$ declare -p C
declare -a C='([0]="Jamon" [3]="400" [5]="Melon")'
Obsérvese que no hace falta suministrar los elementos en orden, ni
suministrarlos todos, los índices donde no colocamos un valor, simplemente
valdrán "cadena nula".
Si sólo indicamos algunos índices, los demás los asigna continuando las
cuenta desde el último índice asignado:
$ C=([5]=Cosa Casa Perro)
Pág 101

