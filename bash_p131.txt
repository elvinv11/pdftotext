El shell Bash

MacProgramadores

2. Control de jobs
2.1. Foreground y background
Los procesos lanzados en background pierden la entrada estándar del
terminal, con lo que no pueden leer del terminal, pero mantienen la salida
estándar y salida de errores estándar asociadas al terminal, con lo que si
escriben un mensaje, lo veremos. Por ello, como ya hemos comentado,
muchas veces los procesos se lanzan redirigiendo la salida estándar a
/dev/null, y dejando que sólo la salida de errores estándar aparezca en el
terminal (para detectar si el proceso tiene problemas).
Una vez que lanzamos un job en background éste se está ejecutando hasta
que acaba o necesita leer un valor de la entrada estándar. Podemos conocer
el estado de los procesos que tengamos en background usando el comando
jobs:
$ jobs
[1]
Stopped
[2]- Running
[3]+ Running

esto
eso
aquello

En este caso el comando eso está ejecutando correctamente (Running),
pero el proceso esto está parado (Stopped), lo cual indica que
posiblemente esté esperando una entrada por teclado, y como la entrada
estándar esta liberada del terminal, no puede leer. En este caso debemos de
pasar el proceso a foreground, usando el comando fg, e introducir el dato
que está pidiendo:
$ fg %esto
Indique el fichero: prueba.txt
El comando fg sin argumentos pone en foreground el proceso más reciente
(el 3 en este caso). Si queremos indicar un proceso a poner en foreground
debemos indicar su número de job o su nombre precedidos por %1. Realmente
no hace falta indicar todo su nombre, basta con indicar el principio de éste.
Por ejemplo fg %aq pondría en foreground el job número 3.
El + y - que parece al ejecutar jobs indican respectivamente el proceso más
reciente y el anterior al más reciente. Estos símbolos también pueden usarse
para referirse a los procesos. Por ejemplo fg + pondría en foreground el job
3.

1

Realmente en las versiones recientes de Bash no es necesario preceder por %, pero lo
vamos a hacer por uniformidad con lo que vamos a ver más adelante
Pág 131

