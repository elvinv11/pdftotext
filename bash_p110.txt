El shell Bash

MacProgramadores

stderr a stdout. Y si lo que hubiéramos ejecutado hubiera sido ls 1>&2 lo
que habríamos hecho es enviar el listado de directorios (stdout) a la salida de
errores estándar (stderr).
El operador n<&m enlaza el descriptor n en el descriptor de entrada m. Por
ejemplo el comando cat 3< clave.h 0<&3 enlaza el descriptor de entrada
3 con el fichero clave.h, y luego cambia stdin para que en vez de leer de
teclado, lea del descriptor de fichero 3, con lo que el contenido de clave.h
actúa como entrada al comando cat.
Cuando a n>&m se le omite m (se usa n&>), se usa stdout como m, y cuando a
n<&m se le omite m (se usa n<&), se usa stdin como m.
Cuando un descriptor de fichero n no está asignado podemos usar
n>fichero para asignar el descriptor de fichero de salida n al fichero, y
n<fichero para asignar el descriptor de fichero de entrada n al fichero.
Por ejemplo ls 3>mis.ficheros 1>&3 asigna el descriptor de fichero de
salida 3 al fichero mis.ficheros, y después enlaza la salida estándar con el
descriptor 3, con lo que la salida de ls va al fichero mis.ficheros.
También podemos usar el operador n<>fichero para que n sea a la vez un
descriptor de entrada y de salida para fichero. Por ejemplo el siguiente
comando lee el fichero clientes.txt y luego escribe en él los clientes
ordenados:
$ cat clientes.txt
Juan
Pedro
Ana
$ sort 3<>clientes.txt 0<&3 1>&3
$ cat clientes.txt
Juan
Pedro
Ana
Ana
Juan
Pedro
Obsérvese que los clientes ordenados no sobrescriben a los existentes, sino
que se escriben a continuación. Esto se debe a que al leerlos, el puntero a
fichero se ha colocado al final, y cuando después escribimos estamos
escribiendo al final de éste.
El operador n<>fichero se puede abreviar como <>fichero, en cuyo caso
stdin se convierte en un descriptor de fichero de entrada/salida con fichero
como fuente y destino. Es decir, el comando anterior se podría haber escrito
como sort <>clientes.txt 1>&0. El final del comando 1>&0 se usa
Pág 110

