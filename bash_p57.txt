El shell Bash

MacProgramadores

$ {var:-valor} se utiliza para retornar un valor por defecto cuando el
valor de la variable var está indefinido. Por ejemplo ${veces:-1} devuelve
1 si el valor de veces está indefinido o es nulo.
$ {var:+valor} por contra se utiliza para comprobar que una variable
tenga asignado un valor no nulo. Por ejemplo ${veces:+1} retorna 1 (que
se puede interpretar como verdadero) si veces tiene un valor asignado.
Los dos operadores de cadena anteriores no modifican el valor de la variable
var, simplemente devuelven un valor, si queremos modificar var podemos
usar $ {var:=valor} que asigna un valor a la variable si ésta está
indefinida. Por ejemplo $ {veces:=1} asigna 1 a veces si ésta no tiene
valor.
También podemos querer detectar errores producidos porque una variable no
tenga valor asignado, en este caso usamos $ {var:?mensaje} que detecta
si var no tiene valor asignado y produce un mensaje de error. Por ejemplo $
{veces:?'Debe tener un valor asignado'} imprime veces: Debe
tener un valor asignado si veces no tiene valor asignado.
Por último podemos coger partes de una cadena usando $ {var:offset:
longitud}. Por ejemplo si nombre vale Fernando Lopez, $
{nombre:0:8} devuelve Fernando y $ {nombre:9} devuelve Lopez.
Ejercicio 4.1
Imaginemos que tenemos un fichero con el saldo y nombre de un conjunto
de clientes de la forma:
$ cat clientes
45340
Jose Carlos Martinez
24520
Mari Carmen Gutierrez
450
Luis Garcia Santos
44
Marcos Vallido Grandes
500
Carlos de la Fuente Lopez
Escribir un script que imprima los N clientes que más saldo tengan. El script
recibirá como primer argumento el fichero de clientes y, opcionalmente como
segundo argumento, el número N de clientes a imprimir. Si no se proporciona
N, por defecto será 5. Luego la forma del comando podría ser:
mejoresclientes fichero [cuantos]
Para ello podemos usar el comando sort el cual ordena líneas, y después el
comando head que saca las primeras líneas de la forma:
sort -nr $1 | head -${2:-5}
Pág 57

