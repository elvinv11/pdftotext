El shell Bash

MacProgramadores

4. Los comandos comand, builtin y enable
Como vimos en el Tema 4, cuando introducimos un comando en Bash el
orden de preferencia en la búsqueda del símbolo por parte de Bash es:
Primero las funciones, luego los comandos internos y por último los ficheros
de scripts y ejecutables del PATH. Los comandos internos command,
builtin y enable nos permiten alterar este orden de preferencia.
command hace que no se busquen alias ni nombres de funciones, sólo
comandos internos y comandos de fichero. En el Ejercicio 5.1 redefinimos en
comando cd creando la función cd(). Aunque usamos builtin para
implementarlo, éste también es un buen ejemplo de lugar donde podemos
usar command para evitar que la función cd() se llame a sí misma.
cd()
{
command cd "$@"
local ct=$?
echo "$OLDPWD -> $PWD"
return $ct
}
builtin es similar a command, pero es más restrictivo, sólo busca
comandos internos.
enable nos permite desactivar el nombre de un comando interno, lo cual
permite que un comando de fichero pueda ejecutarse sin necesidad de dar
toda la ruta del fichero. Un ejemplo de comando interno que muchas veces
da lugar a errores durante las primeras lecciones de programación en Bash es
el comando interno test. Muchas veces queremos probar algo y creamos un
script con el nombre test, pero cuando vamos a ejecutarlo resulta que no
funciona como esperamos porque lo que estamos haciendo es ejecutar el
comando interno test, y no nuestro script de prueba.
Podemos usar el comando enable -a para ver todos los comandos internos,
y si están habilitados o no.

Pág 125

